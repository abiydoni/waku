<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Database Tables - WA Gateway</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
      rel="stylesheet"
    />
    <style>
        body {
            background-color: #f8f9fa;
        }
        .table-container {
            background: white;
            border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            margin-bottom: 30px;
        }
        .table-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px;
            border-radius: 10px 10px 0 0;
        }
        .table-header h3 {
            margin: 0;
            font-weight: 600;
        }
        .table-body {
            padding: 0;
        }
        .table {
            margin: 0;
        }
        .table th {
            background-color: #f8f9fa;
            border-top: none;
            font-weight: 600;
            color: #495057;
        }
        .status-badge {
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 0.75rem;
            font-weight: 500;
        }
        .status-connected {
            background-color: #d4edda;
            color: #155724;
        }
        .status-connecting {
            background-color: #fff3cd;
            color: #856404;
        }
        .status-disconnected {
            background-color: #f8d7da;
            color: #721c24;
        }
        .status-error {
            background-color: #f5c6cb;
            color: #721c24;
        }
        .refresh-btn {
            position: fixed;
            bottom: 30px;
            right: 30px;
            z-index: 1000;
        }
        .phone-number {
        font-family: "Courier New", monospace;
            font-size: 0.9rem;
        }
        .qr-code {
        font-family: "Courier New", monospace;
            font-size: 0.8rem;
            max-width: 200px;
            word-break: break-all;
        }
        .setting-value {
        font-family: "Courier New", monospace;
            font-size: 0.9rem;
            max-width: 300px;
            word-break: break-word;
        }
      .table-responsive {
        max-height: 600px;
        overflow-y: auto;
      }
      .table th {
        position: sticky;
        top: 0;
        background-color: #f8f9fa;
        z-index: 10;
      }
      .badge {
        font-size: 0.75rem;
      }
      .status-badge {
        font-size: 0.8rem;
      }
      .current-menu {
        font-family: "Courier New", monospace;
        font-size: 0.9rem;
        font-weight: 600;
        }
    </style>
</head>
<body>
    <div class="container-fluid py-4">
        <div class="row">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h1 class="h3 mb-0">
                        <i class="fas fa-database text-primary me-2"></i>
                        Database Tables
                    </h1>
                    <div class="d-flex align-items-center">
                        <span class="badge bg-success me-2">
                            <i class="fas fa-circle me-1"></i>
                            Live Data
                        </span>
              <button
                class="btn btn-outline-primary btn-sm"
                onclick="refreshData()"
              >
                            <i class="fas fa-sync-alt me-1"></i>
                            Refresh
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <!-- Sessions Table -->
        <div class="col-12">
                <div class="table-container">
                    <div class="table-header">
                        <h3>
                            <i class="fas fa-users me-2"></i>
                            Sessions Table
                        </h3>
                        <small>Total: <span id="sessions-count">0</span> sessions</small>
                    </div>
                    <div class="table-body">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Name</th>
                                        <th>Status</th>
                                        <th>Phone</th>
                                        <th>QR Code</th>
                      <th>Current Menu</th>
                      <th>Bot Enabled</th>
                      <th>Auto Reply</th>
                      <th>Group Reply</th>
                                        <th>Updated</th>
                                    </tr>
                                </thead>
                                <tbody id="sessions-table-body">
                                    <tr>
                      <td colspan="10" class="text-center text-muted">
                                            <i class="fas fa-spinner fa-spin me-2"></i>
                                            Loading sessions...
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Settings Table -->
        <div class="col-12">
                <div class="table-container">
                    <div class="table-header">
                        <h3>
                            <i class="fas fa-cogs me-2"></i>
                            Bot Settings Table
                        </h3>
                        <small>Total: <span id="settings-count">0</span> settings</small>
                    </div>
                    <div class="table-body">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Session ID</th>
                                        <th>Key</th>
                                        <th>Value</th>
                                        <th>Type</th>
                                        <th>Description</th>
                      <th>Created</th>
                      <th>Updated</th>
                                    </tr>
                                </thead>
                                <tbody id="settings-table-body">
                                    <tr>
                      <td colspan="7" class="text-center text-muted">
                                            <i class="fas fa-spinner fa-spin me-2"></i>
                                            Loading settings...
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Refresh Button -->
    <button
      class="btn btn-primary refresh-btn"
      onclick="refreshData()"
      title="Refresh Data"
    >
        <i class="fas fa-sync-alt"></i>
    </button>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Load data on page load
      document.addEventListener("DOMContentLoaded", function () {
            loadSessionsData();
            loadSettingsData();
        });

        // Load sessions data
        async function loadSessionsData() {
            try {
          const response = await fetch("/api/sessions");
                const data = await response.json();
                
                if (data.success) {
                    displaySessionsData(data.data);
                } else {
            console.error("Error loading sessions:", data.error);
                }
            } catch (error) {
          console.error("Error fetching sessions:", error);
            }
        }

        // Load settings data
        async function loadSettingsData() {
            try {
          const response = await fetch("/api/settings/all");
                const data = await response.json();
                
                if (data.success) {
                    displaySettingsData(data.data);
                } else {
            console.error("Error loading settings:", data.error);
                }
            } catch (error) {
          console.error("Error fetching settings:", error);
            }
        }

        // Display sessions data
        function displaySessionsData(sessions) {
        const tbody = document.getElementById("sessions-table-body");
        const countSpan = document.getElementById("sessions-count");
            
            countSpan.textContent = sessions.length;
            
            if (sessions.length === 0) {
          tbody.innerHTML =
            '<tr><td colspan="10" class="text-center text-muted">No sessions found</td></tr>';
                return;
            }
            
        tbody.innerHTML = sessions
          .map(
            (session) => `
                <tr>
                    <td><strong>${session.session_id}</strong></td>
                    <td>${session.session_name}</td>
                    <td>
                        <span class="status-badge status-${session.status}">
                            ${getStatusIcon(session.status)} ${session.status}
                        </span>
                    </td>
                    <td class="phone-number">${session.phone_number || "-"}</td>
                     <td class="qr-code">${
                       session.qr_code
                         ? session.qr_code.substring(0, 20) + "..."
                         : "-"
                     }</td>
                     <td>
                       <span class="badge bg-info current-menu">
                         ${session.current_menu_id || "None"}
                       </span>
                     </td>
                     <td>
                        <span class="badge ${
                          session.bot_enabled ? "bg-success" : "bg-danger"
                        }">
                            ${session.bot_enabled ? "Enabled" : "Disabled"}
                        </span>
                    </td>
                    <td>
                        <span class="badge ${
                          session.auto_reply_enabled
                            ? "bg-success"
                            : "bg-danger"
                        }">
                            ${
                              session.auto_reply_enabled
                                ? "Enabled"
                                : "Disabled"
                            }
                        </span>
                    </td>
                    <td>
                        <span class="badge ${
                          session.group_reply_enabled
                            ? "bg-success"
                            : "bg-danger"
                        }">
                            ${
                              session.group_reply_enabled
                                ? "Enabled"
                                : "Disabled"
                            }
                        </span>
                    </td>
                    <td>
                        <small class="text-muted">
                            ${new Date(session.updated_at).toLocaleString()}
                        </small>
                    </td>
                </tr>
            `
          )
          .join("");
        }

        // Display settings data
        function displaySettingsData(settings) {
        const tbody = document.getElementById("settings-table-body");
        const countSpan = document.getElementById("settings-count");
            
            countSpan.textContent = settings.length;
            
            if (settings.length === 0) {
          tbody.innerHTML =
            '<tr><td colspan="7" class="text-center text-muted">No settings found</td></tr>';
                return;
            }
            
        tbody.innerHTML = settings
          .map(
            (setting) => `
                <tr>
                    <td><strong>${setting.session_id}</strong></td>
                    <td><code>${setting.setting_key}</code></td>
                    <td class="setting-value">${
                      setting.setting_value || "-"
                    }</td>
                    <td>
                        <span class="badge bg-secondary">${
                          setting.setting_type
                        }</span>
                    </td>
                    <td>
                        <small class="text-muted">${
                          setting.description || "-"
                        }</small>
                    </td>
                    <td>
                        <small class="text-muted">
                            ${new Date(setting.created_at).toLocaleString()}
                        </small>
                    </td>
                    <td>
                        <small class="text-muted">
                            ${new Date(setting.updated_at).toLocaleString()}
                        </small>
                    </td>
                </tr>
            `
          )
          .join("");
        }

        // Get status icon
        function getStatusIcon(status) {
        switch (status) {
          case "connected":
            return '<i class="fas fa-check-circle"></i>';
          case "connecting":
            return '<i class="fas fa-spinner fa-spin"></i>';
          case "disconnected":
            return '<i class="fas fa-times-circle"></i>';
          case "error":
            return '<i class="fas fa-exclamation-triangle"></i>';
          default:
            return '<i class="fas fa-question-circle"></i>';
            }
        }

        // Refresh data
        function refreshData() {
        const refreshBtn = document.querySelector(".refresh-btn i");
        refreshBtn.classList.add("fa-spin");
            
        Promise.all([loadSessionsData(), loadSettingsData()]).finally(() => {
                setTimeout(() => {
            refreshBtn.classList.remove("fa-spin");
                }, 500);
            });
        }

        // Auto refresh every 30 seconds
        setInterval(refreshData, 30000);
    </script>
</body>
</html>
